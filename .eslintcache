[{"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\MealsCheckbox\\MealsCheckbox.tsx":"1","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\containers\\Assumptions\\Assumptions.tsx":"2","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\DoughnutChart\\DoughnutChart.tsx":"3","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\MacronutrientsInputs\\MacronutrientsInputs.tsx":"4","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\AuthActions.ts":"5","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\sagas\\authSaga.ts":"6","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\sagas\\index.ts":"7","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\sagas\\userDataSaga.ts":"8","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\index.tsx":"9","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\index.ts":"10","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\userDataActions.ts":"11","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\reducers\\authReducer.ts":"12","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\containers\\Auth\\Auth.tsx":"13","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Spinner\\Spinner.js":"14","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\containers\\Calculator\\Calculator.tsx":"15","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\hoc\\Layout.tsx":"16","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Modal\\Modal.tsx":"17","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Table\\Table.tsx":"18","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\reducers\\userDataReducer.ts":"19","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\sagas\\calculatorSaga.ts":"20","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Backdrop\\Backdrop.tsx":"21","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\AssumptionsActions.ts":"22","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\actionTypes.ts":"23","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Popover\\Popover.tsx":"24","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\reducers\\calculatorReducer.ts":"25","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\GenderCheckbox\\GenderCheckbox.tsx":"26","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\App.tsx":"27","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Nav\\Nav.tsx":"28","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Homepage\\Homepage.tsx":"29","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\CalculatorForm\\CalculatorForm.tsx":"30","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\CommonActions.ts":"31","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\CalculatorActions.ts":"32","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\selectors\\factorSelector.ts":"33"},{"size":2600,"mtime":1611588034681,"results":"34","hashOfConfig":"35"},{"size":4517,"mtime":1611588616713,"results":"36","hashOfConfig":"35"},{"size":812,"mtime":1611582592982,"results":"37","hashOfConfig":"35"},{"size":2031,"mtime":1611588395370,"results":"38","hashOfConfig":"35"},{"size":1681,"mtime":1611580235005,"results":"39","hashOfConfig":"35"},{"size":5536,"mtime":1611591706431,"results":"40","hashOfConfig":"35"},{"size":1011,"mtime":1611591724092,"results":"41","hashOfConfig":"35"},{"size":1381,"mtime":1611592082716,"results":"42","hashOfConfig":"35"},{"size":1954,"mtime":1611587777994,"results":"43","hashOfConfig":"35"},{"size":769,"mtime":1611582593053,"results":"44","hashOfConfig":"35"},{"size":1325,"mtime":1611319265173,"results":"45","hashOfConfig":"35"},{"size":1969,"mtime":1611327330793,"results":"46","hashOfConfig":"35"},{"size":3083,"mtime":1611588886971,"results":"47","hashOfConfig":"35"},{"size":168,"mtime":1609161943239,"results":"48","hashOfConfig":"35"},{"size":3774,"mtime":1611588060383,"results":"49","hashOfConfig":"35"},{"size":957,"mtime":1611582593038,"results":"50","hashOfConfig":"35"},{"size":3712,"mtime":1611323672055,"results":"51","hashOfConfig":"35"},{"size":2077,"mtime":1611219562121,"results":"52","hashOfConfig":"35"},{"size":2997,"mtime":1611587991554,"results":"53","hashOfConfig":"35"},{"size":804,"mtime":1611591110366,"results":"54","hashOfConfig":"35"},{"size":351,"mtime":1611147373799,"results":"55","hashOfConfig":"35"},{"size":842,"mtime":1611054408837,"results":"56","hashOfConfig":"35"},{"size":1812,"mtime":1611224566952,"results":"57","hashOfConfig":"35"},{"size":673,"mtime":1611219543996,"results":"58","hashOfConfig":"35"},{"size":1691,"mtime":1611319226703,"results":"59","hashOfConfig":"35"},{"size":1631,"mtime":1611147442530,"results":"60","hashOfConfig":"35"},{"size":1206,"mtime":1611587000232,"results":"61","hashOfConfig":"35"},{"size":1079,"mtime":1611219529131,"results":"62","hashOfConfig":"35"},{"size":1216,"mtime":1609250853932,"results":"63","hashOfConfig":"35"},{"size":3482,"mtime":1611220613781,"results":"64","hashOfConfig":"35"},{"size":144,"mtime":1611307773518,"results":"65","hashOfConfig":"35"},{"size":1864,"mtime":1611319258525,"results":"66","hashOfConfig":"35"},{"size":646,"mtime":1609772582586,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xpbu1y",{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\MealsCheckbox\\MealsCheckbox.tsx",["141","142"],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\containers\\Assumptions\\Assumptions.tsx",["143","144","145"],"import React, {\r\n  FunctionComponent,\r\n  useCallback,\r\n  useEffect,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"rsuite\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport classes from \"./Assumptions.module.css\";\r\nimport { DoughnutChart } from \"../../components/DoughnutChart/DoughnutChart\";\r\nimport MealsCheckbox from \"../../components/MealsCheckbox/MealsCheckbox\";\r\nimport { RootState } from \"../../index\";\r\nimport { healthDataSelector } from \"../../selectors/factorSelector\";\r\nimport { HealthInfo } from \"../../selectors/factorSelector\";\r\nimport basicTable from \"../../components/Table/Table\";\r\nimport {\r\n  changeHealthData,\r\n  changeCarbs,\r\n  changeFat,\r\n  changeProtein,\r\n  changeMeals,\r\n  updateHealthData,\r\n} from \"../../store/actions\";\r\nimport MacronutrientsInputs from \"../../components/MacronutrientsInputs/MacronutrientsInputs\";\r\n\r\nimport { PrimeCheckboxProps } from \"../../components/MealsCheckbox/MealsCheckbox\";\r\n\r\ninterface AssumptionsProps {\r\n  carbsValue: string;\r\n  proteinValue: string;\r\n  fatValue: string;\r\n  selectedMeals: Array<string>;\r\n}\r\n\r\nconst Assumptions: FunctionComponent<AssumptionsProps> = ({\r\n  carbsValue,\r\n  proteinValue,\r\n  fatValue,\r\n}) => {\r\n  const { activity, goal, weight, height, gender, age } = useSelector(\r\n    (state: RootState) => state.calculatorReducer.healthData\r\n  );\r\n  const { BMI, BMR, TEE } = useSelector<RootState, HealthInfo>(\r\n    healthDataSelector\r\n  );\r\n  const { protein, carbs, fat } = useSelector(\r\n    (state: RootState) => state.userDataReducer.macronutrients\r\n  );\r\n  const { key, meals } = useSelector((state: RootState) => state.userDataReducer);\r\n  const { totalCalories } = useSelector((state: RootState) => state.userDataReducer.userData);\r\n  const { userId, token } = useSelector(\r\n    (state: RootState) => state.authReducer\r\n  );\r\n\r\n  const proteinNumber = Number(protein);\r\n  const carbsNumber = Number(carbs);\r\n  const fatNumber = Number(fat);\r\n\r\n  const macronutrients = [carbsNumber, proteinNumber, fatNumber];\r\n  const macronutrientsSummary = carbsNumber + proteinNumber + fatNumber;\r\n\r\n  const updatedHealthData = {\r\n    [key]: {\r\n      userData: {\r\n        data: {\r\n          weight,\r\n          height,\r\n          age,\r\n          activity,\r\n          gender,\r\n          goal,\r\n        },\r\n        calculations: {\r\n          BMI,\r\n          BMR,\r\n          TEE,\r\n          totalCalories,\r\n        },\r\n      },\r\n      userId,\r\n      dietData: {\r\n        macronutrients: {\r\n          'carbs': carbsNumber,\r\n          'protein': proteinNumber,\r\n          'fat': fatNumber\r\n        },\r\n        meals: [...meals],\r\n      },\r\n    },\r\n  };\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeHandler = () => {\r\n    dispatch(changeHealthData());\r\n    history.push(\"/calculator\");\r\n  };\r\n  const onChangeCarbs = (carbsAmount: string) =>\r\n    dispatch(changeCarbs(carbsAmount));\r\n  const onChangeProtein = (proteinAmount: string) =>\r\n    dispatch(changeProtein(proteinAmount));\r\n  const onChangeFat = (fatAmount: string) => dispatch(changeFat(fatAmount));\r\n  const onSaveAssumptionsData = () => {\r\n    dispatch(updateHealthData(updatedHealthData, token, key));\r\n  };\r\n\r\n  const onMealChangeHandler = (e: PrimeCheckboxProps) => {\r\n    const selectedMeals = [...meals];\r\n    if (e.checked) selectedMeals.push(e.value);\r\n    else selectedMeals.splice(selectedMeals.indexOf(e.value), 1);\r\n    dispatch(changeMeals(selectedMeals));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Assumptions}>\r\n      <h3>Your assumptions</h3>\r\n      <hr />\r\n      {basicTable({ activity, goal, totalCalories })}\r\n      <Button onClick={onChangeHandler}>Change</Button>\r\n      <hr />\r\n      <div className={classes.Macronutrients}>\r\n        {DoughnutChart(macronutrients)}\r\n        <MacronutrientsInputs\r\n          carbsChange={(carbsAmount) => onChangeCarbs(carbsAmount)}\r\n          proteinChange={(proteinAmount) => onChangeProtein(proteinAmount)}\r\n          fatChange={(fatAmount) => onChangeFat(fatAmount)}\r\n          carbsValue={carbs}\r\n          proteinValue={protein}\r\n          fatValue={fat}\r\n        />\r\n      </div>\r\n      {macronutrientsSummary !== 100 && <p>Summary must be equal to 100%!</p>}\r\n      <hr />\r\n      <MealsCheckbox onMealChange={onMealChangeHandler} />\r\n      {macronutrientsSummary === 100 && (\r\n        <Button onClick={onSaveAssumptionsData}>Save</Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Assumptions;\r\n","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\DoughnutChart\\DoughnutChart.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\MacronutrientsInputs\\MacronutrientsInputs.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\AuthActions.ts",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\sagas\\authSaga.ts",["146"],"import { healthDataSelector } from \"./../../selectors/factorSelector\";\r\nimport { sendHealthData } from \"./../actions/CalculatorActions\";\r\n\r\nimport { put, call, delay, select } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nimport { RootState } from \"../../index\";\r\nimport * as actions from \"../actions/index\";\r\nimport { fetchHealthDataSaga, updateHealthDataSaga } from \"./userDataSaga\";\r\nimport { sendHealthDataSaga } from \"./calculatorSaga\";\r\n\r\nexport function* logoutSaga(action: any) {\r\n  yield call([localStorage, \"removeItem\"], \"token\");\r\n  yield call([localStorage, \"removeItem\"], \"userId\");\r\n  yield call([localStorage, \"removeItem\"], \"expirationDate\");\r\n  yield put(actions.logoutSucceed());\r\n}\r\n\r\nexport function* checkAuthTimeoutSaga(action: any) {\r\n  yield delay(action.expirationTime * 1000);\r\n  yield put(actions.logout());\r\n}\r\n\r\nexport function* authUserSaga(action: any) {\r\n  const getMore = yield select(\r\n    (state: RootState) => state.calculatorReducer.getMore\r\n  );\r\n\r\n  yield put(actions.authStart());\r\n  const authData = {\r\n    email: action.email,\r\n    password: action.password,\r\n    returnSecureToken: true,\r\n  };\r\n  let url =\r\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDXtW2ezooPuqPrlvzlYcogj8MLX3aj1nw \";\r\n  if (!action.isSignup) {\r\n    url =\r\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDXtW2ezooPuqPrlvzlYcogj8MLX3aj1nw \";\r\n  }\r\n  try {\r\n    yield delay(1000);\r\n    const response = yield axios.post(url, authData);\r\n    const expirationDate = yield new Date(\r\n      new Date().getTime() + response.data.expiresIn * 1000\r\n    );\r\n\r\n    yield localStorage.setItem(\"token\", response.data.idToken);\r\n    yield localStorage.setItem(\"userId\", response.data.localId);\r\n    yield localStorage.setItem(\"expirationDate\", expirationDate);\r\n    yield put(\r\n      actions.authSuccess(response.data.idToken, response.data.localId)\r\n    );\r\n    yield put(actions.checkAuthTimeout(response.data.expiresIn));\r\n    yield call(fetchHealthDataSaga, {\r\n      ...action,\r\n      userId: response.data.localId,\r\n      token: response.data.idToken,\r\n    });\r\n\r\n    const { fetched, key } = yield select(\r\n      (state: RootState) => state.userDataReducer\r\n    );\r\n    const healthData = yield select(\r\n      (state: RootState) => state.calculatorReducer.healthData\r\n    );\r\n    const { meals, macronutrients } = yield select(\r\n      (state: RootState) => state.userDataReducer\r\n    );\r\n    const healthDataCalculations = yield select(healthDataSelector);\r\n\r\n    if (getMore && !fetched) {\r\n      const createdHealthData = createHealthData(\r\n        healthData,\r\n        healthDataCalculations,\r\n        response.data.localId\r\n      );\r\n      yield call(sendHealthDataSaga, {\r\n        // ...action,\r\n        healthData: createdHealthData,\r\n        userId: response.data.localId,\r\n        token: response.data.idToken,\r\n      });\r\n      action.history.push(\"/assumptions\");\r\n    } else if (getMore && fetched) {\r\n      const updatedData = createUpdatedHealthData(\r\n        healthData,\r\n        healthDataCalculations,\r\n        response.data.localId,\r\n        key,\r\n        meals,\r\n        macronutrients\r\n      );\r\n\r\n      yield call(updateHealthDataSaga, {\r\n        updatedHealthData: updatedData,\r\n        token: response.data.idToken,\r\n        userId: response.data.localId,\r\n        key: key,\r\n      });\r\n      action.history.push(\"/assumptions\");\r\n    } else if (fetched) {\r\n      action.history.push(\"/assumptions\");\r\n    } else {\r\n      action.history.push(\"/calculator\");\r\n    }\r\n  } catch (error) {\r\n    yield put(actions.authFail(error.response.data.error));\r\n  }\r\n}\r\n\r\nexport function* authCheckStateSaga(action: any) {\r\n  const token = yield localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    yield put(actions.logout());\r\n  } else {\r\n    const expirationDate = yield new Date(\r\n      yield localStorage.getItem(\"expirationDate\")\r\n    );\r\n    if (expirationDate <= new Date()) {\r\n      yield put(actions.logout());\r\n    } else {\r\n      const userId = yield localStorage.getItem(\"userId\");\r\n      yield put(actions.authSuccess(token, userId));\r\n      yield put(\r\n        actions.checkAuthTimeout(\r\n          (expirationDate.getTime() - new Date().getTime()) / 1000\r\n        )\r\n      );\r\n      yield call(fetchHealthDataSaga, {\r\n        token: token,\r\n        userId: userId,\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nconst createHealthData = (\r\n  { weight, height, age, activity, gender, goal }: any,\r\n  { BMI, BMR, TEE, totalCalories }: any,\r\n  userId: string\r\n) => ({\r\n  userData: {\r\n    data: {\r\n      weight,\r\n      height,\r\n      age,\r\n      activity,\r\n      gender,\r\n      goal,\r\n    },\r\n    calculations: {\r\n      BMI,\r\n      BMR,\r\n      TEE,\r\n      totalCalories,\r\n    },\r\n  },\r\n  userId,\r\n  dietData: {\r\n    macronutrients: {\r\n      protein: 0,\r\n      fat: 0,\r\n      carbs: 0,\r\n    },\r\n    meals: [\"\"],\r\n  },\r\n});\r\n\r\nconst createUpdatedHealthData = (\r\n  { weight, height, age, activity, gender, goal }: any,\r\n  { BMI, BMR, TEE, totalCalories }: any,\r\n  userId: string,\r\n  key: string,\r\n  meals: string[],\r\n  macronutrients: object\r\n) => ({\r\n  [key]: {\r\n    userData: {\r\n      data: {\r\n        weight,\r\n        height,\r\n        age,\r\n        activity,\r\n        gender,\r\n        goal,\r\n      },\r\n      calculations: {\r\n        BMI,\r\n        BMR,\r\n        TEE,\r\n        totalCalories,\r\n      },\r\n    },\r\n    userId,\r\n    dietData: {\r\n      macronutrients: {\r\n        ...macronutrients,\r\n      },\r\n      meals: [...meals],\r\n    },\r\n  },\r\n});\r\n","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\sagas\\index.ts",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\sagas\\userDataSaga.ts",["147"],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\index.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\index.ts",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\userDataActions.ts",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\reducers\\authReducer.ts",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\containers\\Auth\\Auth.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Spinner\\Spinner.js",[],["148","149"],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\containers\\Calculator\\Calculator.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\hoc\\Layout.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Modal\\Modal.tsx",["150"],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Table\\Table.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\reducers\\userDataReducer.ts",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\sagas\\calculatorSaga.ts",["151"],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Backdrop\\Backdrop.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\AssumptionsActions.ts",[],["152","153"],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\actionTypes.ts",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Popover\\Popover.tsx",["154"],"import React, { FunctionComponent } from \"react\";\r\nimport { Popover, Whisper, Button } from \"rsuite\";\r\n\r\ninterface PopoverProps {\r\n  content: string;\r\n  title: string;\r\n}\r\n\r\nconst Speaker: FunctionComponent<PopoverProps> = ({\r\n  content,\r\n  title,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <Popover {...props}>\r\n      <p>{content}</p>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport const CustomPopover: FunctionComponent<PopoverProps> = ({\r\n  content,\r\n  title,\r\n}) => (\r\n  <Whisper\r\n    trigger=\"hover\"\r\n    placement=\"auto\"\r\n    speaker={<Speaker title={title} content={content} />}\r\n  >\r\n    <button>\r\n      <i className=\"fas fa-question-circle\"></i>\r\n    </button>\r\n  </Whisper>\r\n);\r\n","C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\reducers\\calculatorReducer.ts",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\GenderCheckbox\\GenderCheckbox.tsx",["155"],"import React, { FunctionComponent, ChangeEvent } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classes from \"./GenderCheckbox.module.css\";\r\n\r\ninterface GenderCheckboxProps {\r\n  onChange: (gender: string) => void;\r\n}\r\n\r\nconst GenderCheckbox: FunctionComponent<GenderCheckboxProps> = ({\r\n  onChange,\r\n}) => {\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.CheckboxField}>\r\n      <label>Gender:</label>\r\n      <div className={classes.Checkbox}>\r\n        <label className={classes.CheckboxElement}>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            onChange={handleChange}\r\n            value=\"female\"\r\n          />\r\n          <span className={classes.checkmark}></span>\r\n          <span className={classes.Label}>Female</span>\r\n        </label>\r\n        <label className={classes.CheckboxElement}>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            onChange={handleChange}\r\n            value=\"male\"\r\n          />\r\n          <span className={classes.checkmark}></span>\r\n          <span className={classes.Label}>Male</span>\r\n        </label>\r\n        <label className={classes.CheckboxElement}>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            onChange={handleChange}\r\n            value=\"other\"\r\n          />\r\n          <span className={classes.checkmark}></span>\r\n          <span className={classes.Label}>Other</span>\r\n        </label>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenderCheckbox;\r\n",["156","157"],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\App.tsx",["158","159"],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Nav\\Nav.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\Homepage\\Homepage.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\components\\CalculatorForm\\CalculatorForm.tsx",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\CommonActions.ts",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\store\\actions\\CalculatorActions.ts",[],"C:\\Users\\Wiktoria\\Desktop\\PORTFOLIO\\diet-app\\src\\selectors\\factorSelector.ts",[],{"ruleId":"160","severity":1,"message":"161","line":1,"column":17,"nodeType":"162","messageId":"163","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"164","line":1,"column":46,"nodeType":"162","messageId":"163","endLine":1,"endColumn":57},{"ruleId":"160","severity":1,"message":"165","line":3,"column":3,"nodeType":"162","messageId":"163","endLine":3,"endColumn":14},{"ruleId":"160","severity":1,"message":"166","line":4,"column":3,"nodeType":"162","messageId":"163","endLine":4,"endColumn":12},{"ruleId":"160","severity":1,"message":"164","line":5,"column":3,"nodeType":"162","messageId":"163","endLine":5,"endColumn":14},{"ruleId":"160","severity":1,"message":"167","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":24},{"ruleId":"160","severity":1,"message":"168","line":1,"column":21,"nodeType":"162","messageId":"163","endLine":1,"endColumn":26},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"160","severity":1,"message":"173","line":7,"column":10,"nodeType":"162","messageId":"163","endLine":7,"endColumn":17},{"ruleId":"160","severity":1,"message":"174","line":6,"column":10,"nodeType":"162","messageId":"163","endLine":6,"endColumn":23},{"ruleId":"169","replacedBy":"175"},{"ruleId":"171","replacedBy":"176"},{"ruleId":"160","severity":1,"message":"177","line":2,"column":28,"nodeType":"162","messageId":"163","endLine":2,"endColumn":34},{"ruleId":"160","severity":1,"message":"178","line":2,"column":10,"nodeType":"162","messageId":"163","endLine":2,"endColumn":17},{"ruleId":"169","replacedBy":"179"},{"ruleId":"171","replacedBy":"180"},{"ruleId":"160","severity":1,"message":"181","line":3,"column":23,"nodeType":"162","messageId":"163","endLine":3,"endColumn":34},{"ruleId":"160","severity":1,"message":"182","line":8,"column":10,"nodeType":"162","messageId":"163","endLine":8,"endColumn":19},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ChangeEvent' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'sendHealthData' is defined but never used.","'delay' is defined but never used.","no-native-reassign",["183"],"no-negated-in-lhs",["184"],"'NavLink' is defined but never used.","'useRadioGroup' is defined but never used.",["183"],["184"],"'Button' is defined but never used.","'useForm' is defined but never used.",["183"],["184"],"'useSelector' is defined but never used.","'RootState' is defined but never used.","no-global-assign","no-unsafe-negation"]:7,"endColumn":17},{"ruleId":"161","severity":1,"message":"175","line":6,"column":10,"nodeType":"163","messageId":"164","endLine":6,"endColumn":23},{"ruleId":"170","replacedBy":"176"},{"ruleId":"172","replacedBy":"177"},{"ruleId":"161","severity":1,"message":"178","line":2,"column":28,"nodeType":"163","messageId":"164","endLine":2,"endColumn":34},{"ruleId":"161","severity":1,"message":"179","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":17},{"ruleId":"170","replacedBy":"180"},{"ruleId":"172","replacedBy":"181"},{"ruleId":"161","severity":1,"message":"182","line":3,"column":23,"nodeType":"163","messageId":"164","endLine":3,"endColumn":34},{"ruleId":"161","severity":1,"message":"183","line":8,"column":10,"nodeType":"163","messageId":"164","endLine":8,"endColumn":19},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ChangeEvent' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'sendHealthData' is defined but never used.","'delay' is defined but never used.","no-native-reassign",["184"],"no-negated-in-lhs",["185"],"'NavLink' is defined but never used.","'useRadioGroup' is defined but never used.",["184"],["185"],"'Button' is defined but never used.","'useForm' is defined but never used.",["184"],["185"],"'useSelector' is defined but never used.","'RootState' is defined but never used.","no-global-assign","no-unsafe-negation"]